import os
import logging
import datetime
from telegram import (
    Update, 
    ReplyKeyboardMarkup, 
    ReplyKeyboardRemove
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ü–ï–†–í–´–ú –¥–µ–ª–æ–º
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Fithub Bot...")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TELEGRAM_BOT_TOKEN:
    logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
try:
    from database import db
    from usda_database import usda_db
    from nutrition_calculator import nutrition_calc
    from vision_analyzer import vision_analyzer
    logger.info("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π: {e}")
    raise

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    CHOOSING_ROLE, TRAINEE_SETUP, TRAINEE_GOAL, TRAINEE_ACTIVITY,
    AWAITING_PHOTO, CONFIRM_FOOD, MEAL_TYPE_SELECTION,
    LINK_TRAINER, MANUAL_FOOD_INPUT, FOOD_QUANTITY
) = range(10)

# [–í–ê–® –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ö–û–î –ö–õ–ê–í–ò–ê–¢–£–† –ò –§–£–ù–ö–¶–ò–ô...]
# –í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–ï–°–¨ –í–ê–® –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ö–û–î –ò–ó bot.py
# –ù–ê–ß–ò–ù–ê–Ø –° get_role_keyboard() –î–û –ö–û–ù–¶–ê

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤"""
    logger.info("üîÑ –°–æ–∑–¥–∞–µ–º Application...")
    
    # –°–æ–∑–¥–∞–µ–º Application —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è Railway
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    
    # [–í–ê–®–ê –°–£–©–ï–°–¢–í–£–Æ–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í...]
    # –í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–°–Æ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Æ –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ò–ó –í–ê–®–ï–ì–û –ö–û–î–ê
    
    logger.info("‚úÖ –ë–æ—Ç —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        application.run_polling(
            drop_pending_updates=True,  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            allowed_updates=['message', 'callback_query'],
            close_loop=False
        )
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        # –ù–∞ Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è

if __name__ == '__main__':
    main()
